name: Release
# This workflow is triggered manually
on:
  workflow_dispatch:
    inputs:
      version_bump_type:
        description: 'Version Bump Type (major, minor, patch)'
        required: true
        default: 'patch'
      version_metadata_path:
        description: 'Path to file containing Version string'
        required: true
        default: 'pkg/version/version.go'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container: ghcr.io/packagrio/packagr:latest-golang
    env:
      PROJECT_PATH: /go/src/github.com/analogj/hatchet
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Bump version
        id: bump_version
        uses: packagrio/action-bumpr-go@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version_bump_type: ${{ github.event.inputs.version_bump_type }}
          version_metadata_path: ${{ github.event.inputs.version_metadata_path }}
      - name: Test
        run: |
          mkdir -p $(dirname "$PROJECT_PATH")
          cp -a $GITHUB_WORKSPACE $PROJECT_PATH
          cd $PROJECT_PATH

          go mod vendor
          go test -v -tags "static" $(go list ./... | grep -v /vendor/)

      - name: Build Binaries
        run: |

          cd $PROJECT_PATH
          GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.goos=darwin -X main.goarch=amd64" -o hatchet-darwin-amd64 -tags "static" $(go list ./cmd/...)
          chmod +x hatchet-darwin-amd64
          GOOS=linux GOARCH=amd64 go build -ldflags "-X main.goos=linux -X main.goarch=amd64" -o hatchet-linux-amd64 -tags "static" $(go list ./cmd/...)
          chmod +x hatchet-linux-amd64
          GOOS=windows GOARCH=amd64 go build -ldflags "-X main.goos=windows -X main.goarch=amd64" -o hatchet-windows-amd64.exe -tags "static" $(go list ./cmd/...)

          # restore modified dir to GH workspace.
          cp -arf $PROJECT_PATH/. $GITHUB_WORKSPACE/
      - name: Commit Changes
        id: commit
        uses: packagrio/action-releasr-go@master
        env:
          # This is necessary in order to push a commit to the repo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Leave this line unchanged
      - name: Publish Release
        id: publish
        uses: packagrio/action-publishr-go@master
        env:
          # This is necessary in order to push a commit to the repo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Leave this line unchanged
        with:
          upload_assets: 'hatchet-darwin-amd64 hatchet-linux-amd64 hatchet-windows-amd64.exe'
